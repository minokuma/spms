<?xml version="1.0" encoding="UTF-8"?>								
<!DOCTYPE mapper 								
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"								
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spms.mapper.BoardMapper">
	<!-- com.spms.mapper.BoardMapper.java 인터페이스 매퍼 정의를 기술 -->
	<!-- getList()에 대한 정의 기술 -->
	<!-- <![CDATA[ SQL문 ]]> : xml은 비교연산자 및 부등호 등을 태그로 자동 인식하기때문에 처리 필요  -->					
	<!-- <select id="getList" resultType="com.spms.domain.BoardVO">							
		<![CDATA[						
			select * 
			from tbl_board 					
			where bno > 0					
		]]>						
	</select> 
	-->
	<!-- getListWithPaging()에 대한 정의 기술 -->
	<!-- 
	<select id="getListWithPaging" resultType="com.spms.domain.BoardVO">							
		<![CDATA[						
			select bno,
			       title,
			       content,
			       writer,
			       regdate,
			       updatedate
			from (
			     select /*+ INDEX_DESC(tbl_board pk_board) */
			            rownum rnum, bno, title, content, writer, regdate, updatedate
			     from tbl_board
			     where rownum <= #{pageNum} * #{amount}
			     )
			where rnum > (#{pageNum} -1) * #{amount}
		]]>
	</select>
	 -->
	 
	<!-- 싸이클 7 : SQL의 일부를 별도로 보관해서 필요할 때만 include 시키는 형태로 사용 --> 
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql> 
	 
	 
	 
	<!-- 싸이클 7 - getListWithPaging()에 대한 정의 기술 : 동적 SQL -->
	<select id="getListWithPaging" resultType="com.spms.domain.BoardVO">							
		<![CDATA[						
			select bno,
			       title,
			       content,
			       writer,
			       regdate,
			       updatedate
			from (
			     select /*+ INDEX_DESC(tbl_board pk_board) */
			            rownum rnum, 
			            bno, 
			            title, 
			            content, 
			            writer, 
			            regdate, 
			            updatedate
			     from tbl_board
			     where 
		]]>
		   <trim prefix="(" suffix=") AND " prefixOverrides="OR">
		   		<foreach item="type" collection="typeArr">
		   			<trim prefix="OR">
		   				<choose>
		   					<when test="type == 'T'.toString()">
		   						title like '%' || #{keyword} || '%'
		   					</when>
		   					<when test="type == 'C'.toString()">
		   						title like '%' || #{keyword} || '%'
		   					</when>
		   					<when test="type == 'W'.toString()">
		   						title like '%' || #{keyword} || '%'
		   					</when>
		   				</choose>
		   			</trim>
		   		</foreach>
		   </trim>
		<![CDATA[   
			     rownum <= #{pageNum} * #{amount}
			     )
			where rnum > (#{pageNum} -1) * #{amount}
		]]>
	</select>
	
	<select id="getTotalCount" resultType="int">							
		<![CDATA[						
			select count(*) 
			from tbl_board 					
			where bno > 0					
		]]>
	</select>
	
	<select id="read" resultType="com.spms.domain.BoardVO">
		select *
		from tbl_board
		where bno =
		#{bno}
	</select>

	<insert id="insert">
		insert into tbl_board (bno, title, content, writer)
		values (seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>

	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE"
			resultType="long">
			select seq_board.nextval
			from dual
		</selectKey>

		insert into tbl_board (bno, title, content, writer)
		values (#{bno},
		#{title}, #{content}, #{writer})
	</insert>

	<update id="update">
		update tbl_board
		set title=#{title},
		content=#{content},
		writer=#{writer},
		updateDate=sysdate
		where bno=#{bno}
	</update>

	<delete id="delete">
		delete tbl_board
		where bno = #{bno}
	</delete>

</mapper>		